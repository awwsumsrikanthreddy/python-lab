trigger:
- Build-Docker-image

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: SecurityScan_Aqua
    displayName: Security Scan (Aqua)
    dependsOn: []
    pool:
      vmImage: 'ubuntu-latest'

    container:
      image: aquasec/aqua-scanner
      env:
        AZURE_TOKEN: $(System.AccessToken)
        AQUA_KEY: LnD9gzLZMhZYCrr02qhkSX
        AQUA_SECRET: caWtiNk5F0QyzPG8n9bfhjWASKy5rHLoiEa
        AQUA_URL: https://api.eu-1.supply-chain.cloud.aquasec.com
        CSPM_URL: https://eu-1.api.cloudsploit.com
        TRIVY_RUN_AS_PLUGIN: aqua

    steps:
    - checkout: self
      fetchDepth: 0

    - script: |
        trivy fs \
          --cache-dir $(pwd)/.cache \
          --scanners misconfig,vuln,secret \
          --severity HIGH,CRITICAL \
          --db-repository=registry.aquasec.com/trivy-db:2 \
          --checks-bundle-repository=registry.aquasec.com/trivy-checks:1 \
          --java-db-repository=registry.aquasec.com/trivy-java-db:1
      displayName: Aqua Trivy Scan

  - job: Build_Manifest
    displayName: Build-image-artifact
    pool:
      vmImage: ubuntu-latest

    steps: 
    - checkout: self

    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        repository: aqua-test
        tags: |
          test-new

    - script: |
        export BILLY_SERVER=https://billy.codesec.aquasec.com
        export TRIVY_USERNAME=$(TRIVY_USERNAME)
        export TRIVY_PASSWORD=$(TRIVY_PASSWORD)
        export TRIVY_DB_REPOSITORY="registry.aquasec.com/trivy-db:2"
        export TRIVY_JAVA_DB_REPOSITORY="registry.aquasec.com/trivy-java-db:1"
        export TRIVY_CHECKS_BUNDLE_REPOSITORY="registry.aquasec.com/trivy-checks:1"
        export TRIVY_QUIET=true

        curl -sLo install.sh https://download.codesec.aquasec.com/billy/install.sh
        curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum

        if ! sha256sum -c install.sh.checksum ; then
          echo "install.sh checksum failed"
          exit 1
        fi

        BINDIR="." sh install.sh
        rm install.sh install.sh.checksum

        ./billy generate \
          --access-token $(System.AccessToken) \
          --aqua-key $(AQUA_KEY) \
          --aqua-secret $(AQUA_SECRET) \
          --cspm-url https://eu-1.api.cloudsploit.com \
          --artifact-path "aqua-test:test-new" \
          --quiet \
          --log-file billy.log \
          --sbom-path SBOM
      displayName: Billy Manifest & SBOM Generation
